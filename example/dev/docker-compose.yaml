version: "3.7"

services:
  postgresql:
    image: postgres:16
    ports:
      - "5432:5432"
    env_file: docker/docker.env
    volumes:
      - dagster-postgres:/var/lib/postgresql/data
    networks:
      - dagster-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U username -d dagster" ]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file: docker/docker.env
    volumes:
      - dagster-minio:/data
    command: server --console-address ":9001" /data
    networks:
      - dagster-network

  create_s3_buckets:
    image: minio/mc
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD); do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/$${DAGSTER_IO_BUCKET};
      exit 0;
      "
    env_file: docker/docker.env
    depends_on:
      - minio
    networks:
      - dagster-network

  redis:
    image: redis:7.2
    command: /bin/sh -c 'redis-server --appendonly yes --requirepass $${REDIS_PASSWORD}'
    ports:
      - "6379:6379"
    env_file: docker/docker.env
    environment:
      REDIS_DATABASES: 1
    volumes:
      - dagster-redis:/data
    networks:
      - dagster-network

  codelocation:
    build:
      context: ..
      dockerfile: ./Dockerfile
    image: dagster-example-user-code:v2
    env_file: docker/docker.env
    volumes:
      - ./dagster.yaml:/app/dagster.yaml
    networks:
      - dagster-network
    depends_on:
      - postgresql
      - daemon

  worker:
    image: dagster-example-user-code:v2
    command: dagster-celery worker start -y /app/celery.yaml -A dagster_celery.app
    restart: on-failure
    env_file: docker/docker.env
    environment:
      DAGSTER_HOME: /app
    volumes:
      - ./dagster.yaml:/app/dagster.yaml
      - ./docker/celery.yaml:/app/celery.yaml
    networks:
      - dagster-network
    depends_on:
      - postgresql
      - redis
      - daemon

  webserver:
    image: dagster/dagster-celery-k8s:latest
    restart: on-failure
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    expose:
      - "3000"
    ports:
      - "3000:3000"
    env_file: docker/docker.env
    environment:
      DAGSTER_HOME: /
    volumes:
      - ./dagster.yaml:/dagster.yaml
      - ./docker/workspace.yaml:/workspace.yaml
    networks:
      - dagster-network
    depends_on:
      - postgresql
      - create_s3_buckets

  daemon:
    image: dagster/dagster-celery-k8s:latest
    restart: on-failure
    entrypoint:
      - dagster-daemon
      - run
    env_file: docker/docker.env
    environment:
      DAGSTER_HOME: /
    volumes:
      - ./dagster.yaml:/dagster.yaml
      - ./docker/workspace.yaml:/workspace.yaml
    networks:
      - dagster-network
    depends_on:
      - postgresql
      - create_s3_buckets

volumes:
  dagster-postgres:
  dagster-minio:
  dagster-redis:

networks:
  dagster-network:
    driver: bridge
    name: dagster-network